<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE packagegui SYSTEM "../schema/packages.dtd">
<?xml-stylesheet type="text/xsl" href="../xsl/package.xsl"?>
<packagegui>
	<copyright>
	<![CDATA[
/*
 * darkstat.xml
 *
 * part of pfSense (https://www.pfsense.org)
 * Copyright (c) 2009-2017 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
	]]>
	</copyright>
	<name>Darkstat</name>
	<title>Diagnostics: Darkstat</title>
	<menu>
		<name>Darkstat Settings</name>
		<tooltiptext>Setup darkstat specific settings.</tooltiptext>
		<section>Diagnostics</section>
		<url>/pkg_edit.php?xml=darkstat.xml</url>
	</menu>
	<service>
		<name>darkstat</name>
		<rcfile>darkstat.sh</rcfile>
		<executable>darkstat</executable>
		<description>Darkstat bandwidth monitoring daemon</description>
	</service>
	<tabs>
		<tab>
			<text>Darkstat Settings</text>
			<url>/pkg_edit.php?xml=darkstat.xml</url>
			<active/>
		</tab>
		<tab>
			<text>Access Darkstat</text>
			<url>http://$myurl:666</url>
		</tab>
	</tabs>
	<advanced_options>enabled</advanced_options>
	<fields>
		<field>
			<fielddescr>Enable darkstat</fielddescr>
			<fieldname>enable</fieldname>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Capture Interfaces</fielddescr>
			<fieldname>capture_interfaces</fieldname>
			<description><![CDATA[
				Capture traffic on the specified network interface(s).
				<span class="text-info">Default: LAN.</span>
				]]>
			</description>
			<type>interfaces_selection</type>
			<hideinterfaceregex>loopback</hideinterfaceregex>
			<size>3</size>
			<multiple>true</multiple>
			<value>lan</value>
			<required>true</required>
		</field>
		<field>
			<fielddescr>Web Interface Binding</fielddescr>
			<fieldname>bind_interfaces</fieldname>
			<description>
				<![CDATA[
				Bind the web interface to the IP address(es) of the specified interface(s).
				<span class="text-info">Default: Listen on all interfaces.</span>
				]]>
			</description>
			<type>interfaces_selection</type>
			<size>3</size>
			<multiple>true</multiple>
		</field>
		<!-- Disabled until there is some way to handle the $myurl thing in the tabs/url tag above -->
		<!--
		<field>
			<fielddescr>Port</fielddescr>
			<fieldname>port</fieldname>
			<description>
				<![CDATA[
				Bind the darkstat web interface to the specified port.<br />
				<strong>WARNING: Do NOT set this to the same port where pfSense WebGUI is running (usually 80/443)!</strong><br />
				(Default is 666.)
				]]>
			</description>
			<type>input</type>
			<size>5</size>
		</field>
		-->
		<field>
			<fielddescr>Local Network Traffic</fielddescr>
			<fieldname>localnetworkenable</fieldname>
			<description>All traffic entering or leaving this network will be graphed.</description>
			<sethelp>Enables the "local network" feature in darkstat. The default behaviour is to only graph traffic to and from the local host.</sethelp>
			<type>checkbox</type>
			<enablefields>localnetworkonly</enablefields>
			<disablefields>localnetworkonly</disablefields>
			</field>
		<field>
			<fielddescr>Local Networks Only</fielddescr>
			<fieldname>localnetworkonly</fieldname>
			<description>Limit the web interface display to only hosts on the "local network"</description>
			<sethelp>If the "local network" feature is enabled above, the web interface will only display hosts on the "local network" defined below.</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Local Network</fielddescr>
			<fieldname>localnetwork</fieldname>
			<description>The network/netmask of the selected interface will be considered the "local network" for displaying traffic using the previous options.</description>
			<type>interfaces_selection</type>
			<hideinterfaceregex>(wan|loopback)</hideinterfaceregex>
		</field>
		<field>
			<fielddescr>No Promiscuous Mode</fielddescr>
			<fieldname>nopromisc</fieldname>
			<description>Do not use promiscuous mode to capture traffic.</description>
			<sethelp>
				<![CDATA[
				Note that an interface may already be in promiscuous mode, or may later enter promiscuous mode,
				due to circumstances beyond the control of darkstat.
				<strong><span class="text-info">This cannot be used when the "local network" feature is enabled.</span></strong>
				]]>
			</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Disable DNS Resolution</fielddescr>
			<fieldname>nodns</fieldname>
			<description>Do not resolve IP addresses to host names in output data.</description>
			<sethelp>Skipping DNS lookups can significantly increase processing speed and also reduces the memory footprint on small systems.</sethelp>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Disable MAC Display</fielddescr>
			<description>Do not display MAC addresses in the hosts table</description>
			<fieldname>nomacs</fieldname>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Disable Seen Time</fielddescr>
			<description>Do not display the last seen time in the hosts table</description>
			<fieldname>nolastseen</fieldname>
			<type>checkbox</type>
		</field>
		<field>
			<fielddescr>Maximum Hosts Count</fielddescr>
			<fieldname>hostsmax</fieldname>
			<description>
				<![CDATA[
				The maximum number of hosts that will be kept in the hosts table.
				This is used to limit how much accounting data will be kept in memory.<br />
				<span class="text-info">If filled in, the number must be greater than 'Maximum number of hosts to keep' below.</span>
				]]>
			</description>
			<type>input</type>
			<size>5</size>
		</field>
		<field>
			<fielddescr>Maximum Hosts to Keep</fielddescr>
			<fieldname>hostskeep</fieldname>
			<description>
				<![CDATA[
				When the hosts table hits 'Maximum hosts count' and traffic is seen from a new host,
				we clean out the hosts table, keeping only the top number of hosts, sorted by total traffic.<br />
				<span class="text-info">If filled in, the number must be lower than 'Maximum hosts count' above.</span>
				]]>
			</description>
			<type>input</type>
			<size>5</size>
		</field>
		<field>
			<fielddescr>Maximum Ports Count</fielddescr>
			<fieldname>portsmax</fieldname>
			<description>
				<![CDATA[
				The maximum number of ports that will be tracked for each host.
				This is used to limit how much accounting data will be kept in memory.<br />
				<span class="text-info">If filled in, the number must be greater than 'Maximum number of ports to keep' below.</span>
				]]>
			</description>
			<type>input</type>
			<size>5</size>
		</field>
		<field>
			<fielddescr>Maximum Ports to Keep</fielddescr>
			<fieldname>portskeep</fieldname>
			<description>
				<![CDATA[
				When a ports table fills up, this many ports are kept and the rest are discarded.<br />
				<span class="text-info">If filled in, the number must be lower than 'Maximum ports count' above.</span>
				]]>
			</description>
			<type>input</type>
			<size>5</size>
		</field>
		<field>
			<fielddescr>Advanced Filtering Options</fielddescr>
			<fieldname>advfilter</fieldname>
			<description>
				<![CDATA[
				Use the specified filter expression when capturing traffic. <span class="text-info">Click Info for examples.</span>
				<div class="infoblock">
				<span class="text-info">Example 1:</span> We only want to account for SSH traffic.<br />
				Filter expression: <em>port 22</em><br /><br />
				<span class="text-info">Example 2:</span> We don't want to account for traffic between internal IPs.<br />
				Filter expression: <em>not (src net 192.168.0 and dst net 192.168.0)</em><br /><br />
				<span class="text-info">NOTE:</span> Filter syntax is beyond the scope of this description; please refer to 
				<a href="https://www.freebsd.org/cgi/man.cgi?query=tcpdump&amp;sektion=1&amp;apropos=0&amp;manpath=FreeBSD+10.1-RELEASE+and+Ports">tcpdump(1)</a>, 
				<a href="https://www.freebsd.org/cgi/man.cgi?query=pcap-filter&amp;sektion=7&amp;apropos=0&amp;manpath=FreeBSD+10.1-RELEASE+and+Ports">pcap-filter(7)</a> 
				and <a href="https://www.freebsd.org/cgi/man.cgi?query=darkstat&apropos=0&sektion=0&manpath=FreeBSD+10.1-RELEASE+and+Ports&arch=default&format=html">darkstat(8)</a>
				documentation.<br />
    				<strong><span class="text-danger">WARNING: You are completely on your own with this!</span> If misconfigured, darkstat will malfunction or even not start at all.</strong>
				</div>
				]]>
			</description>
			<type>textarea</type>
			<encoding>base64</encoding>
			<cols>65</cols>
			<rows>5</rows>
			<advancedfield/>
		</field>
	</fields>
	<custom_php_global_functions>
	<![CDATA[
		function sync_package_darkstat() {
			conf_mount_rw();
			global $config, $darkstat_config;
			$darkstat_config =& $config['installedpackages']['darkstat']['config'][0];

			/* If the service is (being) disabled, stop it (if running), remove rc script and do nothing else */
			if ($darkstat_config['enable'] != "on") {
				if (is_process_running("darkstat")) {
					stop_service("darkstat");
				}
				unlink_if_exists('/usr/local/etc/rc.d/darkstat.sh');
				return;
			}

			/* Configure capture interface(s) */
			$capture_interfaces = $darkstat_config['capture_interfaces'] ?: 'lan';
			foreach (explode(",", $capture_interfaces) as $iface) {
				$if = convert_friendly_interface_to_real_interface_name($iface);
				if ($if) {
					$ifaces_final .= " -i {$if}";
				}
			}
			$start = "/usr/local/sbin/darkstat {$ifaces_final}";

			/* Configure bind interface(s) */
			foreach (explode(",", $darkstat_config['bind_interfaces']) as $iface) {
				$if = convert_friendly_interface_to_real_interface_name($iface);
				$if = get_interface_ip("$iface");
				if ($if) {
					$bind_ifaces_final .= " -b {$if}";
				}
			}
			$start .= "{$bind_ifaces_final}";

			/* Configure darkstat webgui port
			NOTE: This will be always be 666 for now, until the 'Port' field is re-enabled in darkstat.xml
			*/
			$port = $darkstat_config['port'] ?: '666';
			$start .= " -p {$port}";

			/* Deal with the rest of configured options here */
			$localnetworkenable = $darkstat_config['localnetworkenable'];
			$lif = $darkstat_config['localnetwork'];
			if ($localnetworkenable != "") {
				if (is_ipaddrv4(get_interface_ip($lif))) {
					$start .= " -l " . escapeshellarg(gen_subnet(get_interface_ip($lif), get_interface_subnet($lif)) . '/' . gen_subnet_mask(get_interface_subnet($lif)));
				}
				if ($darkstat_config['localnetworkonly'] != "") {
					$start .= " --local-only";
				}
			}
			if (($localnetworkenable == "") && ($darkstat_config['nopromisc'] != "")) {
				$start .= " --no-promisc";
			}
			if ($darkstat_config['nodns'] != "") {
				$start .= " --no-dns";
			}
			if ($darkstat_config['nomacs'] != "") {
				$start .= " --no-macs";
			}
			if ($darkstat_config['nolastseen'] != "") {
				$start .= " --no-lastseen";
			}
			$hostsmax = $darkstat_config['hostsmax'];
			$hostskeep = $darkstat_config['hostskeep'];
			if (($hostsmax > 0) && ($hostsmax > $hostskeep)) {
				$start .= " --hosts-max {$hostsmax}";
			}
			if (($hostskeep > 0) && ($hostskeep < $hostsmax)) {
				$start .= " --hosts-keep {$hostskeep}";
			}
			$portsmax = $darkstat_config['portsmax'];
			$portskeep = $darkstat_config['portskeep'];
			if (($portsmax > 0) && ($portsmax > $portskeep)) {
				$start .= " --ports-max {$portsmax}";
			}
			if (($portskeep > 0) && ($portskeep < $portsmax)) {
				$start .= " --ports-keep {$portskeep}";
			}
			$advfilter = $darkstat_config['advfilter'];
			if ($advfilter != "") {
				$start .= " -f " . escapeshellarg(base64_decode($advfilter));
			}

			write_rcfile(array(
					"file" => "darkstat.sh",
					"start" => $start,
					"stop" => "/usr/bin/killall darkstat"
				)
			);

			/* Do not (re)start service on boot */
			if (platform_booting()) {
				return;
			} elseif (is_process_running("darkstat")) {
				restart_service("darkstat");
			} else {
				start_service("darkstat");
			}

			conf_mount_ro();
		}

		function validate_input_darkstat($post, &$input_errors) {
			if (($_POST['port']) && ($_POST['port'] < 1 || $_POST['port'] < 65535 || !is_numericint($_POST['port']))) {
				$input_errors[] = gettext("The value for 'Maximum number of ports' to keep' must be a positive integer between 1 and 65535.");
			}
			if (($_POST['hostsmax']) && ($_POST['hostsmax'] < 1 || !is_numericint($_POST['hostsmax']))) {
				$input_errors[] = gettext("The value for 'Maximum hosts count' must be a positive integer.");
			}
			if (($_POST['hostskeep']) && ($_POST['hostskeep'] < 1 || !is_numericint($_POST['hostskeep']))) {
				$input_errors[] = gettext("The value for 'Maximum number of hosts to keep' must be a positive integer.");
			}
			if ($_POST['hostsmax'] || $_POST['hostskeep']) {
				if ($_POST['hostsmax'] <= $_POST['hostskeep']) {
					$input_errors[] = gettext("'Maximum hosts count' must be greater than 'Maximum number of hosts to keep'.");
				}
			}
			if (($_POST['portsmax']) && ($_POST['portsmax'] < 1 || !is_numericint($_POST['portsmax']))) {
				$input_errors[] = gettext("The value for 'Maximum ports count' must be a positive integer.");
			}
			if (($_POST['portskeep']) && ($_POST['portskeep'] < 1 || !is_numericint($_POST['portskeep']))) {
				$input_errors[] = gettext("The value for 'Maximum number of ports' to keep' must be a positive integer.");
			}
			if ($_POST['portsmax'] || $_POST['portskeep']) {
				if ($_POST['portsmax'] <= $_POST['portskeep']) {
					$input_errors[] = gettext("'Maximum ports count' must be greater than 'Maximum number of ports to keep'.");
				}
			}
			if ($_POST['localnetworkenable'] && $_POST['nopromisc'] != "") {
				$input_errors[] = gettext("'Do not use promiscuous mode to capture' cannot be used when the 'local network' feature is enabled.");
			}
			if ($_POST['localnetwork']) {
				$int = convert_friendly_interface_to_real_interface_name($post['localnetwork']);
				$ip = find_interface_ip($int);
				if (!is_ipaddrv4($ip)) {
					$input_errors[] = gettext("The selected 'local network' interface has no IPv4 configured. Configured IPv4 is required.");
				}
			}
			if (($post['advfilter']) && !preg_match("/^[a-zA-Z0-9\+\-\=\(\):. ]*$/", $post['advfilter'])) {
				$input_errors[] = gettext('Advanced traffic filtering options may only contain characters matching ^[a-zA-Z0-9\+\-\=\(\):. ]*$ regexp.');
			}
		}
	]]>
	</custom_php_global_functions>
	<custom_php_resync_config_command>
		sync_package_darkstat();
	</custom_php_resync_config_command>
	<custom_php_deinstall_command>
		unlink_if_exists("/usr/local/etc/rc.d/darkstat.sh");
	</custom_php_deinstall_command>
	<custom_php_validation_command>
		validate_input_darkstat($_POST, $input_errors);
	</custom_php_validation_command>
</packagegui>
