#!/usr/local/bin/php
<?php

/* Usage: set-pfsense-hostname <hostname>
 *
 * Set system hostname on running system and in pfsense xml config 
 */

require_once('functions.inc');
require_once('system.inc');
require_once('config.inc');

if (empty($argv[1])) {
	echo "Empty hostname is invalid\n";
	exit(1);
}

$hostname = $argv[1];

/* Get system information and create desired hostname */
$uri = "http://169.254.169.254/metadata/instance?api-version=2017-04-02";
$ch = curl_init($uri);
if (!$ch) {
	echo "Error obtaining VM host information\n";
	exit(1);
}
curl_setopt($ch, CURLOPT_HTTPHEADER, array("Metadata: true"));
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
$vm_info = json_decode(curl_exec($ch), true);
curl_close($ch);

if (!file_exists("/conf/trigger_initial_wizard") &&
    preg_match('/^([^\.]+).(.*)$/', $hostname, $matches)) {
	$hostname = $matches[1];
	$domainname = $matches[2];
} else if (is_array($vm_info)) {
	$hostname = $vm_info['compute']['name'];
	$domainname = $vm_info['compute']['location'] . '.cloudapp.azure.com';
} else {
	echo "Unable to identify desired hostname\n";
	exit(1);
}

if (!is_hostname($hostname . '.' . $domainname)) {
	echo "Invalid hostname supplied: $hostname\n";
	exit(1);
}

$config_changed = false;

if ($config['system']['hostname'] != $hostname) {
	$config['system']['hostname'] = $hostname;
	$config_changed = true;
}

if ($config['system']['domain'] != $domainname) {
	$config['system']['domain'] = $domainname;
	$config_changed = true;
}

if (!empty($vm_info['network']['interface'][0]['ipv4']['ipAddress'][0]['publicIpAddress'])) {
	$public_ip = $vm_info['network']['interface'][0]['ipv4']['ipAddress'][0]['publicIpAddress'];
} else {
	$public_ip = resolve_retry("$hostname.$domainname");
}

if ($public_ip && !is_private_ip($public_ip)) {
	file_put_contents("/var/db/natted_hn0_ip", $public_ip);
}

if ($config_changed) {
	write_config();
	system_hostname_configure();
	system_hosts_generate();
}

return 0;

?>
