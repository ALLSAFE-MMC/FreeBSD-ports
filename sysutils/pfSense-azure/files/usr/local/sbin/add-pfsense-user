#!/usr/local/bin/php
<?php

/* Usage: add-pfsense-user <user_name> <expire_date>
 *
 * Adds a user to the pfSense system config with privileges similar to those
 * that the Azure waagent script attempts to add to a stock FreeBSD/Linux
 * instance.
 */

require_once('config.inc');
require_once('auth.inc');

function generateRandomPassword($length = 15) {
	/* get some random bytes. use them as offsets into the space of
	   printable ascii characters. 32-126 is the printable characters.
	   Omit 32 itself since it might be confusing if there is a space
	   in the password.
	*/

	$range_size = 126 - 33 + 1;
	$random_bytes = str_split(openssl_random_pseudo_bytes($length));

	for ($i = 0; $i < $length; $i++) {

		$offset = ord($random_bytes[$i]) % $range_size;
		$password .= chr(33 + $offset);

	}

	return $password;
}

if (!isset($config['system']['user']) || !is_array($config['system']['user']))
	$config['system']['user'] = array();

$a_user = &$config['system']['user'];
$user_config = array();
$groups = array();

if (empty($argv[1])) {
	exit(1);
}

/* if a user exists with this users name, use the existing data for that
 * user and just update the password and ssh key if one was passed in */
$existing_id = -1;
foreach ($a_user as $userid => $userent) {
	if ($argv[1] == $userent['name']) {
		$user_config = &$userent;
		$existing_id = $userid;
		break;
	}
}
if ($argv[1] == "root") {
	$existing_id = 0;
	$user_config = array(
		'uid' => 0,
		'name' => 'root'
	);
}

if ($existing_id == -1) {
	$user_config['name'] = $argv[1];
	$user_config['descr'] = 'Auto Added account';
	$user_config['groupname'] = 'admins';
	$user_config['scope'] = 'system';
	$user_config['priv'] = [ 'user-shell-access' ];
	$user_config['uid'] = $config['system']['nextuid']++;
	# Add a random password initially otherwise user will not be created
	# on system, only on config.xml
	$user_config['password'] = generateRandomPassword();

	if (!empty($argv[2])) {
		try {
			$exp_dt = new DateTime($argv[2]);
			$user_config['expires'] =  $exp_dt->format("m/d/Y");
		} catch (Exception $ex) {
			;
		}
	}
	local_user_set($user_config);
	$a_user[] = $user_config;
	$groups = [ 'all', 'admins' ];
	local_user_set_groups($user_config, $groups);

	if ($existing_id != -1) {
		$a_user[$existing_id] = $user_config;
	}

	write_config();
}

exit(0);

?>
